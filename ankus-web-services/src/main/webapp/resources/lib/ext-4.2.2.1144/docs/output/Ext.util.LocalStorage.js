Ext.data.JsonP.Ext_util_LocalStorage({"alternateClassNames": [], "aliases": {}, "enum": null, "parentMixins": [], "tagname": "class", "subclasses": [], "extends": "Ext.Base", "uses": [], "html": "<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><strong>Ext.util.LocalStorage</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LocalStorage2.html#Ext-util-LocalStorage' target='_blank'>LocalStorage.js</a></div></pre><div class='doc-contents'><p>This class provides a common API to LocalStorage with backwards compatibility for IE.</p>\n\n<p>The primary aspects of this API match the HTML5 standard API except that this class\nprovides a scoping mechanism to isolate property values by instance. This scope is\ndetermined from the <code>id</code> property. Further, this class does not expose the number of\nkeys in the store as a <code>length</code> property as this cannot be maintained reliably without\nundue cost. Instead there is a <code>getKeys</code> method that returns the cached array of keys\nwhich is lazily populated on first call.</p>\n\n<p>For example:</p>\n\n<pre><code> var store = new <a href=\"#!/api/Ext.util.LocalStorage\" rel=\"Ext.util.LocalStorage\" class=\"docClass\">Ext.util.LocalStorage</a>({\n         id: 'foo'\n     });\n\n store.setItem('bar', 'stuff');\n\n // Equivalent to:\n window.localStorage.setItem('foo-bar', 'stuff');\n</code></pre>\n\n<p>In all cases, the <code>id</code> property is only used by the underlying storage and should not\nbe needed in item access calls or appear when enumerating keys.</p>\n\n<p>To continue with the previous example:</p>\n\n<pre><code> var keys = store.getKeys();\n console.log(keys.length);   // logs 1\n console.log(store.key(0));  // logs \"bar\"\n</code></pre>\n\n<h2>Sharing Instances</h2>\n\n<p>The management of the underlying storage can be broken if multiple instances of this\nclass are created with the same <code>id</code> simultaneously. To avoid creating multiple instances\nwith the same <code>id</code>, use the <code>get</code> method and it will lazily create and share a single\ninstance. When you are done with the shared instance, call <code>release</code>.</p>\n\n<pre><code> var storage = <a href=\"#!/api/Ext.util.LocalStorage-method-get\" rel=\"Ext.util.LocalStorage-method-get\" class=\"docClass\">Ext.util.LocalStorage.get</a>('id');\n\n ...\n\n storage.release(); // do not call `destroy` as others may be using this object\n</code></pre>\n\n<p><strong>IMPORTANT:</strong> Do not mix direction instantiation and <code>get</code> with the same <code>id</code>.</p>\n\n<h2>Legacy IE</h2>\n\n<p>Older IE browsers (specifically IE7 and below) do not support <code>localStorage</code> so this\nclass provides equivalent support using the IE proprietary persistence mechanism: the\n<a href=\"http://msdn.microsoft.com/en-us/library/ms531424(VS.85\"><code>userData</code> behavior</a>.aspx). In\nthis mode, the <code>id</code> serves as name passed to the <code>load</code> and <code>save</code> methods and as the\nsuffix on the DOM element added to the <code>head</code>.</p>\n\n<p>In this mode, writes to the underlying storage are buffered and delayed for performance\nreasons. This can be managed using the <code>flushDelay</code> config or by directly calling the\n<code>save</code> method.</p>\n        <p>Available since: <b>4.2.2</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-flushDelay' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-cfg-flushDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-cfg-flushDelay' class='name expandable'>flushDelay</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span></div><div class='description'><div class='short'>The number of milliseconds to delay writing changes to the underlying store. ...</div><div class='long'><p>The number of milliseconds to delay writing changes to the underlying store.\nThis applies only to legacy IE mode and helps batch multiple writes into one\nflush to storage.</p>\n<p>Defaults to: <code>1</code></p></div></div></div><div id='cfg-id' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-cfg-id' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-cfg-id' class='name expandable'>id</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>The unique identifier for this store. ...</div><div class='long'><p>The unique identifier for this store. This config is required to scope this storage\ndistinctly from others. Ultimately, this is used to set a prefix on all keys.</p>\n</div></div></div><div id='cfg-lazyKeys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-cfg-lazyKeys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-cfg-lazyKeys' class='name expandable'>lazyKeys</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>Determines if the keys collection is continuously maintained by this object. ...</div><div class='long'><p>Determines if the keys collection is continuously maintained by this object. By\ndefault the keys array is lazily fetched from the underlying store and when keys\nare removed, the array is discarded. This heuristic tends to be safer than doing\nthe linear removal and array rippling to remove keys from the array on each call\nto <code>removeItem</code>. If the cost of scanning <code>localStorage</code> for keys is high enough\nand if the keys are frequently needed, then this flag can be set to <code>false</code> to\ninstruct this class to maintain the keys array once it has been determined.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-prefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-cfg-prefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-cfg-prefix' class='name expandable'>prefix</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span></div><div class='description'><div class='short'>The prefix to apply to all localStorage keys manages by this instance. ...</div><div class='long'><p>The prefix to apply to all <code>localStorage</code> keys manages by this instance. This does\nnot apply to the legacy IE mechanism but only to the HTML5 <code>localStorage</code> keys. If\nnot provided, the <code>id</code> property initializes this value with <code>\"id-\"</code>.</p>\n<p>Defaults to: <code>''</code></p></div></div></div><div id='cfg-session' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-cfg-session' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-cfg-session' class='name expandable'>session</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span></div><div class='description'><div class='short'>Specify this as true to use sessionStorage instead of the default localStoreage. ...</div><div class='long'><p>Specify this as <code>true</code> to use <code>sessionStorage</code> instead of the default <code>localStoreage</code>.\nThis option is not supported in legacy IE browsers (IE 6 and 7) and is ignored.</p>\n<p>Defaults to: <code>false</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Properties</h3><div id='property-S-className' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-S-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-className' class='name expandable'>$className</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>'Ext.Base'</code></p></div></div></div><div id='property-_keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-_keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-_keys' class='name expandable'>_keys</a><span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><strong class='private signature' >private</strong><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>The array of all key names. ...</div><div class='long'><p>The array of all key names. This will be <code>null</code> if the keys need to be redetermined\nby the <code>getKeys</code> method.</p>\n</div></div></div><div id='property-_store' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-_store' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-_store' class='name expandable'>_store</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature' >private</strong><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>The Storage instance used to store items. ...</div><div class='long'><p>The Storage instance used to store items. This is based on the <code>session</code> config.</p>\n</div></div></div><div id='property-_users' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-_users' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-_users' class='name expandable'>_users</a><span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a></span><strong class='private signature' >private</strong><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>The number of users that have requested this instance using the get method and\nhave not yet called release. ...</div><div class='long'><p>The number of users that have requested this instance using the <code>get</code> method and\nhave not yet called <code>release</code>.</p>\n<p>Defaults to: <code>0</code></p></div></div></div><div id='property-configMap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-configMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-configMap' class='name expandable'>configMap</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-data' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-data' class='name expandable'>data</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature' >private</strong><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>The parsed data object. ...</div><div class='long'><p>The parsed data object. This is JSON encoded and saved in storage as the <code>xdata</code>\nattribute.</p>\n</div></div></div><div id='property-destroyed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-destroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-destroyed' class='name expandable'>destroyed</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>This property is set to true when the instance's destroy method is called. ...</div><div class='long'><p>This property is set to <code>true</code> when the instance's <code>destroy</code> method is called.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-el' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-el' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-el' class='name expandable'>el</a><span> : HTMLElement</span><strong class='private signature' >private</strong><strong class='readonly signature' >readonly</strong></div><div class='description'><div class='short'>The IE userData enabled element. ...</div><div class='long'><p>The IE <code>userData</code> enabled element. This property is used to support legacy IE\nmode.</p>\n</div></div></div><div id='property-initConfigList' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-initConfigList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigList' class='name expandable'>initConfigList</a><span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-initConfigMap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-initConfigMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-initConfigMap' class='name expandable'>initConfigMap</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-isInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-isInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isInstance' class='name expandable'>isInstance</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Properties</h3><div id='static-property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-property-S-onExtended' class='name expandable'>$onExtended</a><span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a></span><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-cache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-cache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-cache' class='name expandable'>cache</a><span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-supported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-property-supported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-property-supported' class='name expandable'>supported</a><span> : <a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a></span><strong class='readonly signature' >readonly</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>This will be true if some form of local storage is supported or false if not. ...</div><div class='long'><p>This will be <code>true</code> if some form of local storage is supported or <code>false</code> if not.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Ext.util.LocalStorage-method-constructor' class='name expandable'>Ext.util.LocalStorage</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ext.util.LocalStorage\" rel=\"Ext.util.LocalStorage\" class=\"docClass\">Ext.util.LocalStorage</a></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.LocalStorage\" rel=\"Ext.util.LocalStorage\" class=\"docClass\">Ext.util.LocalStorage</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='deprecated signature' >deprecated</strong><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>This method is used by an override to call the superclass method but bypass any\noverridden method. ...</div><div class='long'><p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>Returns the result of calling the superclass method</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Removes all of the keys of this storage. ...</div><div class='long'><p>Removes all of the keys of this storage.\n<strong>NOTE:</strong> This method conforms to the standard HTML5 Storage interface.</p>\n</div></div></div><div id='method-configClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-configClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-configClass' class='name expandable'>configClass</a>( <span class='pre'></span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Destroys this instance and for legacy IE, ensures data is flushed to persistent\nstorage. ...</div><div class='long'><p>Destroys this instance and for legacy IE, ensures data is flushed to persistent\nstorage. This method should not be called directly on instances returned by the\n<code>get</code> method. Call <code>release</code> instead for such instances.</p>\n\n<p><em>NOTE:</em> For non-legacy IE browsers, there is no harm in failing to call this\nmethod. In legacy IE, however, failing to call this method can result in memory\nleaks.</p>\n<p>Overrides: <a href='#!/api/Ext.Base-method-destroy' rel='Ext.Base-method-destroy' class='docClass'>Ext.Base.destroy</a></p></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>name</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[name]</span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</div><div class='description'><div class='short'>Returns the initial configuration passed to constructor when instantiating\nthis class. ...</div><div class='long'><p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a> (optional)<div class='sub-desc'><p>Name of the config option to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed</span><div class='sub-desc'><p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n</div></li></ul></div></div></div><div id='method-getItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-getItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-getItem' class='name expandable'>getItem</a>( <span class='pre'>key</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>Returns the value associated with the given key. ...</div><div class='long'><p>Returns the value associated with the given <code>key</code>.\n<strong>NOTE:</strong> This method conforms to the standard HTML5 Storage interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The value associated with the given <code>key</code>.</p>\n</div></li></ul></div></div></div><div id='method-getKeys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-getKeys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-getKeys' class='name expandable'>getKeys</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</div><div class='description'><div class='short'>Returns the keys for this storage. ...</div><div class='long'><p>Returns the keys for this storage.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]</span><div class='sub-desc'><p>The keys for this storage. This array should be considered as\nreadonly.</p>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'>config</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-init' class='name expandable'>init</a>( <span class='pre'></span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Initializes this instance. ...</div><div class='long'><p>Initializes this instance.</p>\n</div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='chainable signature' >chainable</strong><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-key' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-key' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-key' class='name expandable'>key</a>( <span class='pre'>index</span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></div><div class='description'><div class='short'>Returns the specified key given its index. ...</div><div class='long'><p>Returns the specified key given its <code>index</code>. These keys have the scoping prefix\nremoved so they match what was passed to <code>setItem</code>.\n<strong>NOTE:</strong> This method conforms to the standard HTML5 Storage interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a><div class='sub-desc'><p>The index of the desired key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>The key.</p>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'>names, callback, scope</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-release' class='name expandable'>release</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Call this method when finished with an instance returned by get instead of calling\ndestroy. ...</div><div class='long'><p>Call this method when finished with an instance returned by <code>get</code> instead of calling\n<code>destroy</code>. When the last shared use of this instance calls <code>release</code>, the <code>destroy</code>\nmethod is called automatically.</p>\n\n<p><em>NOTE:</em> Failing to call this method will result in memory leaks.</p>\n</div></div></div><div id='method-removeItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-removeItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-removeItem' class='name expandable'>removeItem</a>( <span class='pre'>key</span> )</div><div class='description'><div class='short'>Removes the value associated with the given key. ...</div><div class='long'><p>Removes the value associated with the given <code>key</code>.\n<strong>NOTE:</strong> This method conforms to the standard HTML5 Storage interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The key.</p>\n</div></li></ul></div></div></div><div id='method-save' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-save' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-save' class='name expandable'>save</a>( <span class='pre'>[delay]</span> )</div><div class='description'><div class='short'>This method ensures the content of the store is saved to the underlying storage. ...</div><div class='long'><p>This method ensures the content of the store is saved to the underlying storage.\nThis applies only to legacy IE. This is not normally called by user code but can\nbe called to ensure storage is saved.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delay</span> : <a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a> (optional)<div class='sub-desc'>\n<p>Defaults to: <code>0</code></p></div></li></ul></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>config, applyIfNotSet</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>applyIfNotSet</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-setItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-setItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-setItem' class='name expandable'>setItem</a>( <span class='pre'>key, value</span> )</div><div class='description'><div class='short'>Sets the value associated with the given key. ...</div><div class='long'><p>Sets the value associated with the given <code>key</code>.\n<strong>NOTE:</strong> This method conforms to the standard HTML5 Storage interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The key.</p>\n</div></li><li><span class='pre'>value</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The new associated value for <code>key</code>.</p>\n</div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature' >protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addConfig' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'>config</span> )<strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'>members</span> )<strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMember' class='name expandable'>addMember</a>( <span class='pre'>name, member</span> )<strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>member</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMembers' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>members</span> )<strong class='chainable signature' >chainable</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='chainable signature' >chainable</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-addXtype' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-addXtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addXtype' class='name expandable'>addXtype</a>( <span class='pre'>xtype</span> )<strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'>fromClass, members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : <a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a></span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>alias, origin</span> )<strong class='static signature' >static</strong></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>config</span> )<strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.LocalStorage'>Ext.util.LocalStorage</span><br/><a href='source/LocalStorage2.html#Ext-util-LocalStorage-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.LocalStorage-method-get' class='name expandable'>get</a>( <span class='pre'>id</span> ) : <a href=\"#!/api/Ext.util.LocalStorage\" rel=\"Ext.util.LocalStorage\" class=\"docClass\">Ext.util.LocalStorage</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Returns a shared instance of the desired local store given its id. ...</div><div class='long'><p>Returns a shared instance of the desired local store given its <code>id</code>. When you\nare finished with the returned object call the <code>release</code> method:</p>\n\n<pre><code> var store = <a href=\"#!/api/Ext.util.LocalStorage-method-get\" rel=\"Ext.util.LocalStorage-method-get\" class=\"docClass\">Ext.util.LocalStorage.get</a>('foo');\n\n // .. use store\n\n store.release();\n</code></pre>\n\n<p><strong>NOTE:</strong> Do not mix this call with direct instantiation of the same <code>id</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The <code>id</code> of the desired instance or a config object\nwith an <code>id</code> property at a minimum.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.util.LocalStorage\" rel=\"Ext.util.LocalStorage\" class=\"docClass\">Ext.util.LocalStorage</a></span><div class='sub-desc'><p>The desired instance, created if needed.</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a></span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-implement' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-implement' class='name expandable'>implement</a>( <span class='pre'></span> )<strong class='deprecated signature' >deprecated</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Adds members to class. ...</div><div class='long'><p>Adds members to class.</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1</p>\n        <p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n\n        </div>\n</div></div></div><div id='static-method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>name, mixinClass</span> )<strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Used internally by the mixins pre-processor ...</div><div class='long'><p>Used internally by the mixins pre-processor</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'>fn, scope</span> )<strong class='chainable signature' >chainable</strong><strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='chainable signature' >chainable</strong><strong class='deprecated signature' >deprecated</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : <a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a><div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div><div id='static-method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base.html#Ext-Base-static-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<strong class='private signature' >private</strong><strong class='static signature' >static</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>", "superclasses": ["Ext.Base"], "meta": {"since": "4.2.2"}, "code_type": "ext_define", "requires": [], "html_meta": {"since": "        <p>Available since: <b>4.2.2</b></p>\n"}, "statics": {"property": [
    {"tagname": "property", "owner": "Ext.Base", "meta": {"static": true, "private": true}, "name": "$onExtended", "id": "static-property-S-onExtended"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"static": true, "private": true}, "name": "cache", "id": "property-cache"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"static": true, "readonly": true}, "name": "supported", "id": "property-supported"}
], "cfg": [], "css_var": [], "method": [
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "private": true}, "name": "addConfig", "id": "static-method-addConfig"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "private": true}, "name": "addInheritableStatics", "id": "static-method-addInheritableStatics"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "private": true}, "name": "addMember", "id": "static-method-addMember"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true}, "name": "addMembers", "id": "static-method-addMembers"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true}, "name": "addStatics", "id": "static-method-addStatics"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "private": true}, "name": "addXtype", "id": "static-method-addXtype"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "private": true}, "name": "borrow", "id": "static-method-borrow"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true}, "name": "create", "id": "static-method-create"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true}, "name": "createAlias", "id": "static-method-createAlias"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "private": true}, "name": "extend", "id": "static-method-extend"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {"static": true}, "name": "get", "id": "method-get"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true}, "name": "getName", "id": "static-method-getName"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "deprecated": {"text": "Use {@link #addMembers} instead.", "version": "4.1"}}, "name": "implement", "id": "static-method-implement"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "private": true}, "name": "mixin", "id": "static-method-mixin"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "private": true}, "name": "onExtended", "id": "static-method-onExtended"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "chainable": true, "markdown": true, "deprecated": {"text": "Use {@link Ext#define Ext.define} instead", "version": "4.1.0"}}, "name": "override", "id": "static-method-override"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"static": true, "private": true}, "name": "triggerExtended", "id": "static-method-triggerExtended"}
], "event": [], "css_mixin": []}, "files": [
    {"href": "LocalStorage2.html#Ext-util-LocalStorage", "filename": "LocalStorage.js"}
], "linenr": 1, "members": {"property": [
    {"tagname": "property", "owner": "Ext.Base", "meta": {"private": true}, "name": "$className", "id": "property-S-className"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"private": true, "readonly": true}, "name": "_keys", "id": "property-_keys"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"private": true, "readonly": true}, "name": "_store", "id": "property-_store"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"private": true, "readonly": true}, "name": "_users", "id": "property-_users"},
    {"tagname": "property", "owner": "Ext.Base", "meta": {"private": true}, "name": "configMap", "id": "property-configMap"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"private": true, "readonly": true}, "name": "data", "id": "property-data"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"readonly": true}, "name": "destroyed", "id": "property-destroyed"},
    {"tagname": "property", "owner": "Ext.util.LocalStorage", "meta": {"private": true, "readonly": true}, "name": "el", "id": "property-el"},
    {"tagname": "property", "owner": "Ext.Base", "meta": {"private": true}, "name": "initConfigList", "id": "property-initConfigList"},
    {"tagname": "property", "owner": "Ext.Base", "meta": {"private": true}, "name": "initConfigMap", "id": "property-initConfigMap"},
    {"tagname": "property", "owner": "Ext.Base", "meta": {"private": true}, "name": "isInstance", "id": "property-isInstance"},
    {"tagname": "property", "owner": "Ext.Base", "meta": {"protected": true}, "name": "self", "id": "property-self"}
], "cfg": [
    {"tagname": "cfg", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "flushDelay", "id": "cfg-flushDelay"},
    {"tagname": "cfg", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "id", "id": "cfg-id"},
    {"tagname": "cfg", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "lazyKeys", "id": "cfg-lazyKeys"},
    {"tagname": "cfg", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "prefix", "id": "cfg-prefix"},
    {"tagname": "cfg", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "session", "id": "cfg-session"}
], "css_var": [], "method": [
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "constructor", "id": "method-constructor"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"protected": true, "deprecated": {"text": "as of 4.1. Use {@link #callParent} instead."}}, "name": "callOverridden", "id": "method-callOverridden"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"protected": true}, "name": "callParent", "id": "method-callParent"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"protected": true}, "name": "callSuper", "id": "method-callSuper"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "clear", "id": "method-clear"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"private": true}, "name": "configClass", "id": "method-configClass"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "destroy", "id": "method-destroy"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"private": true}, "name": "getConfig", "id": "method-getConfig"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {}, "name": "getInitialConfig", "id": "method-getInitialConfig"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "getItem", "id": "method-getItem"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "getKeys", "id": "method-getKeys"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"private": true}, "name": "hasConfig", "id": "method-hasConfig"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {"private": true}, "name": "init", "id": "method-init"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"chainable": true, "protected": true}, "name": "initConfig", "id": "method-initConfig"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "key", "id": "method-key"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"private": true}, "name": "onConfigUpdate", "id": "method-onConfigUpdate"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "release", "id": "method-release"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "removeItem", "id": "method-removeItem"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "save", "id": "method-save"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"chainable": true, "private": true}, "name": "setConfig", "id": "method-setConfig"},
    {"tagname": "method", "owner": "Ext.util.LocalStorage", "meta": {}, "name": "setItem", "id": "method-setItem"},
    {"tagname": "method", "owner": "Ext.Base", "meta": {"protected": true}, "name": "statics", "id": "method-statics"}
], "event": [], "css_mixin": []}, "inheritable": null, "private": null, "component": false, "name": "Ext.util.LocalStorage", "singleton": false, "override": null, "inheritdoc": null, "id": "class-Ext.util.LocalStorage", "mixins": [], "mixedInto": []});
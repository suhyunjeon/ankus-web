Specify annotation types by which both classes and class members (i.e. fields, constructors and methods) are completely excluded from the generated documentation.
<p>
A <b>class</b> is excluded when at least one of the conditions is met:
<ol>
<li>The class has an annotation of one of the specified types.</li>
<li>This is an inner class and one of its enclosing classes has an annotation of one of the specified types.</li>
</ol>
A class <b>member</b> is excluded according to one of the conditions:
<ol>
<li>The member has an annotation of one of the specified types.</li>
<li>The member's class has an annotation of one of the specified types.</li>
<li>The member's class is an inner class and one of its enclosing classes has an annotation of one of the specified types.</li>
</ol>

Therefore, when a class has one of the annotations specified in this parameter, neither that class nor anything defined in it (i.e. members and inner classes) will ever appear in the documentation.
<p>
Each annotation type must be specified with its <b>fully qualified name</b> (e.g. <code>java.lang.Deprecated</code>). Multiple annotation type names must be separated with new lines ('\n'), semicolons (';') or colons (':').
For example:
<blockquote>
<pre><code>
my.core.util.Internal
my.project.api.Exclude
</code></pre>
</blockquote>
<p>
<b>See Also:</b>
<blockquote>
For more details about using annotations, please see description of <i>"Exclude | By Annotations"</i> parameter group
</blockquote>